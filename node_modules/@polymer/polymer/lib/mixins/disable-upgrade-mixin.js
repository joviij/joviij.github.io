define(["exports","./element-mixin.js","../utils/mixin.js","../utils/wrap.js"],function(_exports,_elementMixin,_mixin,_wrap){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.DisableUpgradeMixin=_exports.findObservedAttributesGetter=void 0;const DISABLED_ATTR="disable-upgrade",findObservedAttributesGetter=ctor=>{while(ctor){const desc=Object.getOwnPropertyDescriptor(ctor,"observedAttributes");if(desc){return desc.get}ctor=Object.getPrototypeOf(ctor.prototype).constructor}return()=>[]};_exports.findObservedAttributesGetter=findObservedAttributesGetter;const DisableUpgradeMixin=(0,_mixin.dedupingMixin)(base=>{const superClass=(0,_elementMixin.ElementMixin)(base);let observedAttributesGetter=findObservedAttributesGetter(superClass);class DisableUpgradeClass extends superClass{constructor(){super();this.__isUpgradeDisabled}static get observedAttributes(){return observedAttributesGetter.call(this).concat(DISABLED_ATTR)}_initializeProperties(){if(this.hasAttribute(DISABLED_ATTR)){this.__isUpgradeDisabled=!0}else{super._initializeProperties()}}_enableProperties(){if(!this.__isUpgradeDisabled){super._enableProperties()}}_canApplyPropertyDefault(property){return super._canApplyPropertyDefault(property)&&!(this.__isUpgradeDisabled&&this._isPropertyPending(property))}attributeChangedCallback(name,old,value,namespace){if(name==DISABLED_ATTR){if(this.__isUpgradeDisabled&&null==value){super._initializeProperties();this.__isUpgradeDisabled=!1;if((0,_wrap.wrap)(this).isConnected){super.connectedCallback()}}}else{super.attributeChangedCallback(name,old,value,namespace)}}connectedCallback(){if(!this.__isUpgradeDisabled){super.connectedCallback()}}disconnectedCallback(){if(!this.__isUpgradeDisabled){super.disconnectedCallback()}}}return DisableUpgradeClass});_exports.DisableUpgradeMixin=DisableUpgradeMixin});